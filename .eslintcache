[{"/Users/alexmastak/Documents/Web/portfolio/src/index.tsx":"1","/Users/alexmastak/Documents/Web/portfolio/src/reportWebVitals.ts":"2","/Users/alexmastak/Documents/Web/portfolio/src/App.tsx":"3","/Users/alexmastak/Documents/Web/portfolio/src/components/header/header.tsx":"4","/Users/alexmastak/Documents/Web/portfolio/src/components/banner/banner.tsx":"5","/Users/alexmastak/Documents/Web/portfolio/src/components/works/works.tsx":"6"},{"size":500,"mtime":1612185325824,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1612185325825,"results":"9","hashOfConfig":"8"},{"size":451,"mtime":1612275579896,"results":"10","hashOfConfig":"8"},{"size":2664,"mtime":1612188264609,"results":"11","hashOfConfig":"8"},{"size":1428,"mtime":1612189198518,"results":"12","hashOfConfig":"8"},{"size":879,"mtime":1612275815802,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"j6trd5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexmastak/Documents/Web/portfolio/src/index.tsx",[],["28","29"],"/Users/alexmastak/Documents/Web/portfolio/src/reportWebVitals.ts",[],"/Users/alexmastak/Documents/Web/portfolio/src/App.tsx",[],"/Users/alexmastak/Documents/Web/portfolio/src/components/header/header.tsx",[],"/Users/alexmastak/Documents/Web/portfolio/src/components/banner/banner.tsx",["30"],"import React from \"react\";\nimport styles from './banner.module.scss';\nimport about from './../../images/about.jpg';\n\nexport const Banner = () => {\n\n    return(\n        <div id=\"home\" className={styles.home_banner}>\n\n            <div className={styles.hero_banner_content}>\n                <div className={styles.container}>\n                    <div className={styles.d_table}>\n                        <div className={styles.hero_banner_left}>\n                            <div className={styles.intro}>\n                                <span>Hi There</span>\n                                <h1>I am <span>Jeffrey Aaron</span></h1>\n                                <p>A <span className={styles.typed}\n                                           data-elements=\"UI/UX Designer.,Graphic Designer.,UI Developer.\">Graphic Designer.</span><span\n                                    className={styles.typed_cursor}>|</span></p>\n                            </div>\n                        </div>\n                        <div className={styles.hero_banner_right }>\n                            <div className={styles.hero_right} id=\"scene\">\n                                <img src={about} alt=\"side-image\"/>\n                                        <span className={styles.dok}></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n\n}","/Users/alexmastak/Documents/Web/portfolio/src/components/works/works.tsx",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":24,"column":33,"nodeType":"38","endLine":24,"endColumn":68},{"ruleId":"39","severity":1,"message":"40","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":17},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'shuffle' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]